{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAY,SAAS,gBAAgB,CAAC,mBACtC,EAAa,CAAS,CAAC,EAAE,CAAC,aAAa,CAgBvC,GAXJ,CAFM,E,A,S,C,E,G,M,O,C,G,O,E,E,EAaoB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,KAXlB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EACW,IAAA,EAAT,SAAmB,CAAI,EACrB,MAAO,CAAC,EAAK,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IACpD,EAEA,OAAO,EAAU,GAAK,EAAU,EAClC,GAEO,EAKT,CAAA,EAAW,SAAS,CAAG,KAElB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAjBQ,EAiBH,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAW,WAAW,CAAC,E,C,C,M,E,CADpB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,EAmBL,AAfA,SAAsB,CAAI,EACxB,IAAM,EAAU,EAAE,CAEb,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAQ,IAAI,CAAC,CACX,KAAM,EAAK,SAAS,CACpB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,E,C,C,M,E,CANG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUP,EAEa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar allSalary = document.querySelectorAll(\"[data-position]\");\nvar listParent = allSalary[0].parentElement;\nfunction sortList(list) {\n    var sorting = _to_consumable_array(list);\n    sorting.sort(function(a, b) {\n        var getSalary = function getSalary(elem) {\n            return +elem.dataset.salary.slice(1).replace(\",\", \".\");\n        };\n        return getSalary(b) - getSalary(a);\n    });\n    return sorting;\n}\nvar sortedList = sortList(allSalary);\nlistParent.innerHTML = null;\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = sortedList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var elem = _step.value;\n        listParent.appendChild(elem);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nfunction getEmployees(list) {\n    var newList = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var elem = _step.value;\n            newList.push({\n                name: elem.outerText,\n                position: elem.dataset.position,\n                salary: elem.dataset.salary,\n                age: elem.dataset.age\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return newList;\n}\ngetEmployees(allSalary);\n\n//# sourceMappingURL=index.012b59b6.js.map\n","'use strict';\n\nconst allSalary = document.querySelectorAll('[data-position]');\nconst listParent = allSalary[0].parentElement;\n\nfunction sortList(list) {\n  const sorting = [...list];\n\n  sorting.sort((a, b) => {\n    function getSalary(elem) {\n      return +elem.dataset.salary.slice(1).replace(',', '.');\n    }\n\n    return getSalary(b) - getSalary(a);\n  });\n\n  return sorting;\n}\n\nconst sortedList = sortList(allSalary);\n\nlistParent.innerHTML = null;\n\nfor (const elem of sortedList) {\n  listParent.appendChild(elem);\n}\n\nfunction getEmployees(list) {\n  const newList = [];\n\n  for (const elem of list) {\n    newList.push({\n      name: elem.outerText,\n      position: elem.dataset.position,\n      salary: elem.dataset.salary,\n      age: elem.dataset.age,\n    });\n  }\n\n  return newList;\n}\n\ngetEmployees(allSalary);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","allSalary","document","querySelectorAll","listParent","parentElement","sortedList","sorting","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","getSalary","elem","dataset","salary","replace","innerHTML","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","value","appendChild","err","return","getEmployees","list","newList","push","outerText","position","age"],"version":3,"file":"index.012b59b6.js.map"}